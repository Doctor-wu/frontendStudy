{"version":3,"file":"runtime-dom.global.js","sources":["../../shared/src/index.ts","../../runtime-core/src/vnode.ts","../../runtime-core/src/apiCreateApp.ts","../../runtime-core/src/componentPublicInstance.ts","../../runtime-core/src/component.ts","../../runtime-core/src/renderer.ts","../src/nodeOps.ts","../src/modules/attr.ts","../src/modules/class.ts","../src/modules/events.ts","../src/modules/style.ts","../src/patchProp.ts","../src/index.ts"],"sourcesContent":["export const isObject = (value) => typeof value === 'object' && value !== null;\r\nexport const extend = Object.assign;\r\nexport const isArray = Array.isArray;\r\nexport function isFunction(value): value is Function {\r\n  return typeof value === 'function';\r\n};\r\nexport const isNumber = value => typeof value === 'number';\r\nexport const isString = value => typeof value === 'string';\r\nexport const isIntegerKey = key => {\r\n  if (typeof key === 'symbol') return false;\r\n  return String(parseInt(key + '')) === key;\r\n};\r\n\r\n\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\nexport const hasOwn = (target, key) => hasOwnProperty.call(target, key);\r\n\r\nexport const hasChanged = (oldValue, value) => oldValue !== value;\r\n\r\n\r\nexport * from './shapeFlag';\r\n\r\nconst Shared = {\r\n  isObject,\r\n};\r\n\r\nexport {\r\n  Shared,\r\n};\r\n","// createVNode 创建虚拟节点\r\n\r\nimport { isArray, isObject, isString, ShapeFlags } from \"@vue/shared\";\r\n\r\n// h方法和createAPp类似\r\nexport const createVNode = (type, props, children = null) => {\r\n  // 可以根据type 来区分是组件还是普通的元素\r\n\r\n  const shapeFlag = isString(type) ?\r\n    ShapeFlags.ELEMENT : isObject(type) ?\r\n      ShapeFlags.STATEFUL_COMPONENT : 0\r\n\r\n  const vnode = { // 一个对象来描述对应的内容，虚拟节点有跨平台的能力\r\n    __v_isVnode: true,\r\n    type,\r\n    props,\r\n    children,\r\n    component: null,\r\n    key: props && props.key, // diff 算法会用到key\r\n    el: null, // 稍后会将虚拟节点和真实节点对应起来\r\n    shapeFlag, // 判断出自己的类型和儿子的类型\r\n  }\r\n  normailizeChildren(vnode, children);\r\n  return vnode;\r\n}\r\n\r\nfunction normailizeChildren(vnode, children) {\r\n  let type = 0;\r\n  if (children == null) { // 不对儿子进行处理\r\n    \r\n  } else if (isArray(children)) {\r\n    type = ShapeFlags.ARRAY_CHILDREN;\r\n  } else {\r\n    type = ShapeFlags.TEXT_CHILDREN;\r\n  }\r\n\r\n  vnode.shapeFlag |= type;\r\n}","import { createVNode } from \"./vnode\";\r\n\r\nexport function createAppAPI(render) {\r\n  return function(rootComponent, rootProps) {\r\n    const app = {\r\n      _props: rootProps,\r\n      _component: rootComponent,\r\n      _cantainer: null,\r\n      mount(container) {\r\n        // let vnode = {};\r\n        // render(vnode, container);\r\n        // console.log(container, rootComponent, rootProps, rendererOptions);\r\n\r\n        // 1.根据组件配置创建虚拟节点\r\n        // 2.将虚拟节点和容器获取到后调用render方法进行渲染\r\n\r\n        // 创造虚拟节点\r\n        const vnode = createVNode(rootComponent, rootProps);\r\n        // 调用render\r\n        render(vnode, container);\r\n\r\n\r\n        app._cantainer = container;\r\n      }\r\n    }\r\n    return app;\r\n  }\r\n}","import { hasOwn } from \"@vue/shared\";\r\n\r\nexport const PublicInstanceProxyHandlers = {\r\n  get({_: instance}, key) {\r\n    // 取值时 要访问 setupState Props data\r\n    const { setupState, props, data } = instance;\r\n    if (key[0] === '$') {\r\n      return;\r\n    }\r\n    if (hasOwn(setupState, key)) {\r\n      return setupState[key];\r\n    } else if (hasOwn(props, key)) {\r\n      return props[key];\r\n    } else if (hasOwn(data, key)) {\r\n      return data[key];\r\n    }\r\n\r\n    return undefined;\r\n  },\r\n  set({_: instance}, key, value) {\r\n    const { setupState, props, data } = instance;\r\n    if (hasOwn(setupState, key)) {\r\n      setupState[key] = value;\r\n    } else if (hasOwn(props, key)) {\r\n      props[key] = value;\r\n    } else if (hasOwn(data, key)) {\r\n      data[key] = value;\r\n    }\r\n    return true;\r\n  }\r\n}","// 组件所有的方法\r\n\r\nimport { ShapeFlags } from \"@vue/shared\";\r\nimport { PublicInstanceProxyHandlers } from \"./componentPublicInstance\";\r\n\r\nexport function createComponentInstance(vnode) {\r\n\r\n  // webcomponent 组件需要有“属性” “插槽”\r\n  const instance = { // 组件的实例\r\n    vnode,\r\n    type: vnode.type,\r\n    props: {},\r\n    attrs: {},\r\n    slots: {},\r\n    ctx: {},\r\n    data: {},\r\n    setupState: {}, // 如果setup返回一个对象，这个对象会作为setupstate\r\n    isMounted: false,\r\n  };\r\n  instance.ctx = { _: instance };\r\n\r\n  return instance;\r\n}\r\n\r\nexport function setupComponent(instance) {\r\n  const { props, children } = instance.vnode;\r\n\r\n  // 根据props 解析出 props 和 attrs ， 将其放到instance上\r\n  instance.props = props; // initProps()\r\n  instance.children = children; // initSlot()\r\n\r\n  // 需要先看下 当前组件是不是有状态的组件\r\n  let isStateful = instance.vnode.shapeFlag & ShapeFlags.STATEFUL_COMPONENT;\r\n\r\n  if (isStateful) { // 表示现在是一个带状态的组件\r\n    // 调用当前实例的setup方法，用setup的返回值 填充 setupState和对应的render方法\r\n\r\n    setupStatefulComponent(instance);\r\n  }\r\n}\r\n\r\nfunction setupStatefulComponent(instance) {\r\n  // 代理  传递给render函数的参数\r\n  instance.proxy = new Proxy(instance.ctx, PublicInstanceProxyHandlers);\r\n\r\n  // 获取组件的类型 拿到组件的setup方法\r\n  let Component = instance.type;\r\n  let { setup } = Component;\r\n  let setupContext = createSetupContext(instance);\r\n\r\n  // 有可能没有setup 没有render\r\n  instance.setupState = setup(instance.props, setupContext); // instance 中的props attrs slots emit expose 会被提取出来\r\n  Component.render(instance.proxy);\r\n}\r\n\r\nfunction createSetupContext(instance) {\r\n  return {\r\n    attrs: instance.attrs,\r\n    props: instance.props,\r\n    slots: instance.slots,\r\n    emit: () => { },\r\n    expose: () => { },\r\n  }\r\n}","import { ShapeFlags } from \"@vue/shared\";\r\nimport { createAppAPI } from \"./apiCreateApp\"\r\nimport { createComponentInstance, setupComponent } from \"./component\";\r\n\r\nexport function createRenderer(rendererOptions) {\r\n\r\n  const setupRenderEffect = () => {\r\n    \r\n  }\r\n\r\n  const mountComponent = (initialVNode, container) => {\r\n    // 组件的渲染流程  最核心就是调用setup拿到返回值， 获取render函数返回的结果来进行渲染\r\n    // 1. 先有实例\r\n    const instance = (initialVNode.component = createComponentInstance(initialVNode));\r\n    // 2. 需要的数据解析到实例上\r\n    setupComponent(instance);\r\n    // 3. 创建一个effect 让render执行\r\n    setupRenderEffect()\r\n  }\r\n\r\n  const processComponent = (n1, n2, container) => {\r\n    if (n1 == null) {\r\n      // 初始化流程\r\n      mountComponent(n2, container);\r\n    } else {\r\n      // 组件更新\r\n    }\r\n  }\r\n\r\n  const patch = (n1, n2, container) => {\r\n    // 针对不同类型 做初始化操作\r\n    const { shapeFlag } = n2;\r\n    if (shapeFlag & ShapeFlags.ELEMENT) {\r\n      console.log('元素');\r\n    } else if (shapeFlag & ShapeFlags.STATEFUL_COMPONENT) {\r\n      processComponent(n1, n2, container);\r\n    }\r\n  }\r\n\r\n  const render = (vnode, container) => {\r\n    // core 核心函数; 根据不同的虚拟节点创建对应的真实元素\r\n\r\n    // 默认调用render 可能是初始化流程\r\n    patch(null, vnode, container);\r\n  }\r\n  return {\r\n    createApp: createAppAPI(render),\r\n  }\r\n}\r\n\r\n// createRenderer 目的是创建一个渲染器\r\n\r\n// 框架都是将组件转换成 虚拟DOM -> 虚拟DOM生成真是DOM挂载到真实页面上","// 节点操作\r\nexport const nodeOps = {\r\n  // 元素操作\r\n  createElement: tagName => document.createElement(tagName),\r\n  remove: child => {\r\n    const parent = child.parentNode;\r\n    if (parent) {\r\n      parent.removeChild(child);\r\n    }\r\n  },\r\n  insert: (child, parent, anchor = null) => {\r\n    parent.insertBefore(child, anchor);\r\n  },\r\n  querySelector: selector => document.querySelector(selector),\r\n  setElementText: (el, text) => el.textContent = text,\r\n  // 文本操作\r\n  createText: text => document.createTextNode(text),\r\n  setText: (node, text) => node.nodeValue = text,\r\n}","export const patchAttr = (el, key, value) => {\r\n  if (value == null) {\r\n    el.removeAttribute(key);\r\n  } else {\r\n    el.setAttribute(key, value);\r\n  }\r\n}","export const patchClass = (el, value) => {\r\n  if (value == null) {\r\n    value = '';\r\n  }\r\n\r\n  el.className = value;\r\n}","export const patchEvent = (el, key, value) => {\r\n  // 对函数的缓存 \r\n  const invokers = el.vei || (el.vei = {});\r\n\r\n  const exists = invokers[key];\r\n\r\n  if (exists && value) { // 需要绑定事件并且之前存在事件的情况下 去更新事件绑定\r\n    exists.value = value;\r\n  } else {\r\n    const eventName = key.slice(2).toLowerCase();\r\n    if (value) {\r\n      let invoker = invokers[key] = createInvoker(value);\r\n      el.addEventListener(eventName, invoker);\r\n    } else {\r\n      // 以前绑定了value 现在没有value\r\n      // 移除事件\r\n      el.removeEventListener(eventName, exists);\r\n      invokers[key] = undefined;\r\n    }\r\n  }\r\n}\r\n\r\nfunction createInvoker(value: Function): Function {\r\n  const invoker = (e) => {\r\n    invoker.value(e);\r\n  }\r\n  invoker.value = value; // 为了能随时更改\r\n  return invoker;\r\n}","export const patchStyle = (el, prev, next) => {\r\n  const style = el.style; // 获取样式\r\n  if (next == null) {\r\n    el.removeAttribute('style');\r\n  } else {\r\n    // diff style 新加的要加上  新的没有的要去掉\r\n\r\n    if (prev) {\r\n      for (const key in prev) {\r\n        if (next[key] == null) { // 老的有 新的没有  要去掉\r\n          style[key] = '';\r\n        }\r\n      }\r\n    }\r\n\r\n    for (const key in next) {\r\n      style[key] = next[key];\r\n    }\r\n  }\r\n}","// 针对属性操作\r\n\r\nimport { patchAttr } from \"./modules/attr\";\r\nimport { patchClass } from \"./modules/class\";\r\nimport { patchEvent } from \"./modules/events\";\r\nimport { patchStyle } from \"./modules/style\";\r\n\r\nexport const isEvent = key => /^on[^a-z]/.test(key);\r\n\r\nexport const patchProp = (el, key, preValue, nextValue) => {\r\n  switch (key) {\r\n    case 'class':\r\n      patchClass(el, nextValue);\r\n      break;\r\n    case 'style':\r\n      patchStyle(el, preValue, nextValue);\r\n      break;\r\n    default:\r\n      // 如果不是事件 才是属性\r\n      if (isEvent(key)) {\r\n        patchEvent(el, key, nextValue);\r\n      } else {\r\n        patchAttr(el, key, nextValue);\r\n      }\r\n  }\r\n}","// runtime-dom 核心就是 提供domAPI方法\r\n// 操作节点，操作属性的更新\r\n\r\nimport { createRenderer } from \"@vue/runtime-core\";\r\nimport { extend } from \"@vue/shared\";\r\nimport { nodeOps } from \"./nodeOps\";\r\nimport { patchProp } from \"./patchProp\";\r\n\r\n// 节点操作就是增删改查\r\n// 属性操作 添加 删除 更新 (样式，类，事件，其他属性)\r\n\r\n// 渲染时用到的所有方法\r\nconst rendererOptions = extend({ patchProp }, nodeOps);\r\n\r\n// vue中 runtime-core 提供了核心的方法 来处理渲染 他会使用runtime-dom中的api进行渲染\r\nexport function createApp(rootComponent, rootProps = null) {\r\n  const app: any = createRenderer(rendererOptions).createApp(rootComponent, rootProps);\r\n  let { mount } = app;\r\n  app.mount = function (container) {\r\n    // 清空容器的操作\r\n    container = nodeOps.querySelector(container);\r\n    container.innerHTML = '';\r\n    mount(container);\r\n    // 将组件渲染成dom元素 进行挂载\r\n  }\r\n  return app;\r\n}\r\n\r\n// 用户调用的是runtime-dom -> runtime-core\r\n// runtime-dom 是为了解决平台差异的 (浏览器差异)"],"names":[],"mappings":";;;EAAO,IAAM,QAAQ,GAAG,UAAC,KAAK,IAAK,OAAA,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,KAAK,IAAI,GAAA,CAAC;EACxE,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;EAC7B,IAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;EAK9B,IAAM,QAAQ,GAAG,UAAA,KAAK,IAAI,OAAA,OAAO,KAAK,KAAK,QAAQ,GAAA,CAAC;EAO3D,IAAM,cAAc,GAAG,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC;EAChD,IAAM,MAAM,GAAG,UAAC,MAAM,EAAE,GAAG,IAAK,OAAA,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,GAAA;;ECfvE;EAIA;EACO,IAAM,WAAW,GAAG,UAAC,IAAI,EAAE,KAAK,EAAE,QAAe;;MAAf,yBAAA,EAAA,eAAe;MAGtD,IAAM,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC;4BACT,QAAQ,CAAC,IAAI,CAAC;uCACD,CAAC,CAAA;MAErC,IAAM,KAAK,GAAG;UACZ,WAAW,EAAE,IAAI;UACjB,IAAI,MAAA;UACJ,KAAK,OAAA;UACL,QAAQ,UAAA;UACR,SAAS,EAAE,IAAI;UACf,GAAG,EAAE,KAAK,IAAI,KAAK,CAAC,GAAG;UACvB,EAAE,EAAE,IAAI;UACR,SAAS,WAAA;OACV,CAAA;MACD,kBAAkB,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;MACpC,OAAO,KAAK,CAAC;EACf,CAAC,CAAA;EAED,SAAS,kBAAkB,CAAC,KAAK,EAAE,QAAQ;MACzC,IAAI,IAAI,GAAG,CAAC,CAAC;MACb,IAAI,QAAQ,IAAI,IAAI,EAAE,CAErB;WAAM,IAAI,OAAO,CAAC,QAAQ,CAAC,EAAE;UAC5B,IAAI,2BAA6B;OAClC;WAAM;UACL,IAAI,yBAA4B;OACjC;MAED,KAAK,CAAC,SAAS,IAAI,IAAI,CAAC;EAC1B;;WCnCgB,YAAY,CAAC,MAAM;MACjC,OAAO,UAAS,aAAa,EAAE,SAAS;UACtC,IAAM,GAAG,GAAG;cACV,MAAM,EAAE,SAAS;cACjB,UAAU,EAAE,aAAa;cACzB,UAAU,EAAE,IAAI;cAChB,KAAK,YAAC,SAAS;;;;;;;kBASb,IAAM,KAAK,GAAG,WAAW,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC;;kBAEpD,MAAM,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;kBAGzB,GAAG,CAAC,UAAU,GAAG,SAAS,CAAC;eAC5B;WACF,CAAA;UACD,OAAO,GAAG,CAAC;OACZ,CAAA;EACH;;ECzBO,IAAM,2BAA2B,GAAG;MACzC,GAAG,YAAC,EAAa,EAAE,GAAG;cAAd,QAAQ,OAAA;;UAEN,IAAA,UAAU,GAAkB,QAAQ,WAA1B,EAAE,KAAK,GAAW,QAAQ,MAAnB,EAAE,IAAI,GAAK,QAAQ,KAAb,CAAc;UAC7C,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;cAClB,OAAO;WACR;UACD,IAAI,MAAM,CAAC,UAAU,EAAE,GAAG,CAAC,EAAE;cAC3B,OAAO,UAAU,CAAC,GAAG,CAAC,CAAC;WACxB;eAAM,IAAI,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE;cAC7B,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC;WACnB;eAAM,IAAI,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE;cAC5B,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;WAClB;UAED,OAAO,SAAS,CAAC;OAClB;MACD,GAAG,YAAC,EAAa,EAAE,GAAG,EAAE,KAAK;cAArB,QAAQ,OAAA;UACN,IAAA,UAAU,GAAkB,QAAQ,WAA1B,EAAE,KAAK,GAAW,QAAQ,MAAnB,EAAE,IAAI,GAAK,QAAQ,KAAb,CAAc;UAC7C,IAAI,MAAM,CAAC,UAAU,EAAE,GAAG,CAAC,EAAE;cAC3B,UAAU,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;WACzB;eAAM,IAAI,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE;cAC7B,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;WACpB;eAAM,IAAI,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE;cAC5B,IAAI,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;WACnB;UACD,OAAO,IAAI,CAAC;OACb;GACF;;EC9BD;WAKgB,uBAAuB,CAAC,KAAK;;MAG3C,IAAM,QAAQ,GAAG;UACf,KAAK,OAAA;UACL,IAAI,EAAE,KAAK,CAAC,IAAI;UAChB,KAAK,EAAE,EAAE;UACT,KAAK,EAAE,EAAE;UACT,KAAK,EAAE,EAAE;UACT,GAAG,EAAE,EAAE;UACP,IAAI,EAAE,EAAE;UACR,UAAU,EAAE,EAAE;UACd,SAAS,EAAE,KAAK;OACjB,CAAC;MACF,QAAQ,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC;MAE/B,OAAO,QAAQ,CAAC;EAClB,CAAC;WAEe,cAAc,CAAC,QAAQ;MAC/B,IAAA,KAAsB,QAAQ,CAAC,KAAK,EAAlC,KAAK,WAAA,EAAE,QAAQ,cAAmB,CAAC;;MAG3C,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAC;MACvB,QAAQ,CAAC,QAAQ,GAAG,QAAQ,CAAC;;MAG7B,IAAI,UAAU,GAAG,QAAQ,CAAC,KAAK,CAAC,SAAS,8BAAiC;MAE1E,IAAI,UAAU,EAAE;;UAGd,sBAAsB,CAAC,QAAQ,CAAC,CAAC;OAClC;EACH,CAAC;EAED,SAAS,sBAAsB,CAAC,QAAQ;;MAEtC,QAAQ,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,2BAA2B,CAAC,CAAC;;MAGtE,IAAI,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC;MACxB,IAAA,KAAK,GAAK,SAAS,MAAd,CAAe;MAC1B,IAAI,YAAY,GAAG,kBAAkB,CAAC,QAAQ,CAAC,CAAC;;MAGhD,QAAQ,CAAC,UAAU,GAAG,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;MAC1D,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;EACnC,CAAC;EAED,SAAS,kBAAkB,CAAC,QAAQ;MAClC,OAAO;UACL,KAAK,EAAE,QAAQ,CAAC,KAAK;UACrB,KAAK,EAAE,QAAQ,CAAC,KAAK;UACrB,KAAK,EAAE,QAAQ,CAAC,KAAK;UACrB,IAAI,EAAE,eAAS;UACf,MAAM,EAAE,eAAS;OAClB,CAAA;EACH;;WC3DgB,cAAc,CAAC,eAAe;MAM5C,IAAM,cAAc,GAAG,UAAC,YAAY,EAAE,SAAS;;;UAG7C,IAAM,QAAQ,IAAI,YAAY,CAAC,SAAS,GAAG,uBAAuB,CAAC,YAAY,CAAC,CAAC,CAAC;;UAElF,cAAc,CAAC,QAAQ,CAAC,CAAC;OAG1B,CAAA;MAED,IAAM,gBAAgB,GAAG,UAAC,EAAE,EAAE,EAAE,EAAE,SAAS;UACzC,IAAI,EAAE,IAAI,IAAI,EAAE;;cAEd,cAAc,CAAC,EAAa,CAAC,CAAC;WAG/B;OACF,CAAA;MAED,IAAM,KAAK,GAAG,UAAC,EAAE,EAAE,EAAE,EAAE,SAAS;;UAEtB,IAAA,SAAS,GAAK,EAAE,UAAP,CAAQ;UACzB,IAAI,SAAS,oBAAuB;cAClC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;WACnB;eAAM,IAAI,SAAS,+BAAkC;cACpD,gBAAgB,CAAC,EAAE,EAAE,EAAa,CAAC,CAAC;WACrC;OACF,CAAA;MAED,IAAM,MAAM,GAAG,UAAC,KAAK,EAAE,SAAS;;;UAI9B,KAAK,CAAC,IAAI,EAAE,KAAgB,CAAC,CAAC;OAC/B,CAAA;MACD,OAAO;UACL,SAAS,EAAE,YAAY,CAAC,MAAM,CAAC;OAChC,CAAA;EACH,CAAC;EAED;EAEA;;ECpDA;EACO,IAAM,OAAO,GAAG;;MAErB,aAAa,EAAE,UAAA,OAAO,IAAI,OAAA,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,GAAA;MACzD,MAAM,EAAE,UAAA,KAAK;UACX,IAAM,MAAM,GAAG,KAAK,CAAC,UAAU,CAAC;UAChC,IAAI,MAAM,EAAE;cACV,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;WAC3B;OACF;MACD,MAAM,EAAE,UAAC,KAAK,EAAE,MAAM,EAAE,MAAa;UAAb,uBAAA,EAAA,aAAa;UACnC,MAAM,CAAC,YAAY,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;OACpC;MACD,aAAa,EAAE,UAAA,QAAQ,IAAI,OAAA,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,GAAA;MAC3D,cAAc,EAAE,UAAC,EAAE,EAAE,IAAI,IAAK,OAAA,EAAE,CAAC,WAAW,GAAG,IAAI,GAAA;;MAEnD,UAAU,EAAE,UAAA,IAAI,IAAI,OAAA,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,GAAA;MACjD,OAAO,EAAE,UAAC,IAAI,EAAE,IAAI,IAAK,OAAA,IAAI,CAAC,SAAS,GAAG,IAAI,GAAA;GAC/C;;EClBM,IAAM,SAAS,GAAG,UAAC,EAAE,EAAE,GAAG,EAAE,KAAK;MACtC,IAAI,KAAK,IAAI,IAAI,EAAE;UACjB,EAAE,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;OACzB;WAAM;UACL,EAAE,CAAC,YAAY,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;OAC7B;EACH,CAAC;;ECNM,IAAM,UAAU,GAAG,UAAC,EAAE,EAAE,KAAK;MAClC,IAAI,KAAK,IAAI,IAAI,EAAE;UACjB,KAAK,GAAG,EAAE,CAAC;OACZ;MAED,EAAE,CAAC,SAAS,GAAG,KAAK,CAAC;EACvB,CAAC;;ECNM,IAAM,UAAU,GAAG,UAAC,EAAE,EAAE,GAAG,EAAE,KAAK;;MAEvC,IAAM,QAAQ,GAAG,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC;MAEzC,IAAM,MAAM,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;MAE7B,IAAI,MAAM,IAAI,KAAK,EAAE;UACnB,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;OACtB;WAAM;UACL,IAAM,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;UAC7C,IAAI,KAAK,EAAE;cACT,IAAI,OAAO,GAAG,QAAQ,CAAC,GAAG,CAAC,GAAG,aAAa,CAAC,KAAK,CAAC,CAAC;cACnD,EAAE,CAAC,gBAAgB,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;WACzC;eAAM;;;cAGL,EAAE,CAAC,mBAAmB,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;cAC1C,QAAQ,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC;WAC3B;OACF;EACH,CAAC,CAAA;EAED,SAAS,aAAa,CAAC,KAAe;MACpC,IAAM,OAAO,GAAG,UAAC,CAAC;UAChB,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;OAClB,CAAA;MACD,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;MACtB,OAAO,OAAO,CAAC;EACjB;;EC5BO,IAAM,UAAU,GAAG,UAAC,EAAE,EAAE,IAAI,EAAE,IAAI;MACvC,IAAM,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC;MACvB,IAAI,IAAI,IAAI,IAAI,EAAE;UAChB,EAAE,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;OAC7B;WAAM;;UAGL,IAAI,IAAI,EAAE;cACR,KAAK,IAAM,GAAG,IAAI,IAAI,EAAE;kBACtB,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,EAAE;sBACrB,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;mBACjB;eACF;WACF;UAED,KAAK,IAAM,GAAG,IAAI,IAAI,EAAE;cACtB,KAAK,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;WACxB;OACF;EACH,CAAC;;ECnBD;EAOO,IAAM,OAAO,GAAG,UAAA,GAAG,IAAI,OAAA,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,GAAA,CAAC;EAE7C,IAAM,SAAS,GAAG,UAAC,EAAE,EAAE,GAAG,EAAE,QAAQ,EAAE,SAAS;MACpD,QAAQ,GAAG;UACT,KAAK,OAAO;cACV,UAAU,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;cAC1B,MAAM;UACR,KAAK,OAAO;cACV,UAAU,CAAC,EAAE,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;cACpC,MAAM;UACR;;cAEE,IAAI,OAAO,CAAC,GAAG,CAAC,EAAE;kBAChB,UAAU,CAAC,EAAE,EAAE,GAAG,EAAE,SAAS,CAAC,CAAC;eAChC;mBAAM;kBACL,SAAS,CAAC,EAAE,EAAE,GAAG,EAAE,SAAS,CAAC,CAAC;eAC/B;OACJ;EACH,CAAC;;ECzBD;EAQA;EACA;EAEA;EACwB,MAAM,CAAC,EAAE,SAAS,WAAA,EAAE,EAAE,OAAO,EAAE;EAEvD;WACgB,SAAS,CAAC,aAAa,EAAE,SAAgB;MAAhB,0BAAA,EAAA,gBAAgB;MACvD,IAAM,GAAG,GAAQ,cAAc,CAAgB,CAAC,CAAC,SAAS,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC;MAC/E,IAAA,KAAK,GAAK,GAAG,MAAR,CAAS;MACpB,GAAG,CAAC,KAAK,GAAG,UAAU,SAAS;;UAE7B,SAAS,GAAG,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;UAC7C,SAAS,CAAC,SAAS,GAAG,EAAE,CAAC;UACzB,KAAK,CAAC,SAAS,CAAC,CAAC;;OAElB,CAAA;MACD,OAAO,GAAG,CAAC;EACb,CAAC;EAED;EACA;;;;;;;;;;;;"}